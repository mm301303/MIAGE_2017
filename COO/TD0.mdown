TD 0

vendredi 8 septembre 2017

Objectif : fournir un logiciel permettant de gérer des rectangles

Ce n'est pas un cours d'UML mais de COO, générique à l'Objet

# Méthodologie 

## 1. Specs 

* Il vaut pouvoir créer deux rectangles 

* Saisir les dimensions l1 et L1, l2 et L2
* Afficher les surfaces S1 et S2
* Modifier l1 du premier
* Afficher S1 du premier

Le logiciel devra pouvoir etre retranscrit graphiquement 

Le logiciel devra pouvoir afficher n rectangles

## 2. Conception

### Critères de qualité


* Utilisabilité : affichage console

* Robustesse : Peut planter en cas de saisie incorrecte (on va quand meme eviter...)

* Performances : Aucune exigence de temps de réponse

Le logiciel doit en revanche être ***maintenable*** et ***évolutif***


### Description de l'IHM 

Les saisies se font en console sous la forme

```

Donner la largeur du [premier/deuxieme] rectangle 

```
Les résultats sont envoyés sous la forme 

```

La surface du [premier/deuxième] rectangle est : [valeur]


```
### Langage

Le langage est un langage objet pour faciliter la maintenabilité, on choisira d'utiliser JAVA cas les membres du groupe connaissent la techno.

### Structuration du logiciel

(en vrai on a pas besoin de repere, mais dans le but de faire une IHM graphique... Ici on a pas explicitement besoin au vu des specs de repérer les rectangles dans un espace, la notion de point est donc inutile dans cette interprétation)

Le but de l'exercice est entre autre de ne pas dépasser les specs, afin de ne pas amener la conception vers des idées éloignées de celle du client.

Si on voulait représenter les rectangles dans l'espace par la suite, on ferait sans doute :

* Package ***geometrie_logique***

On a besoin d'un endroit ou dessiner, qui doit pour permettre les n rectangles être le moins délimité possible, on utilisera un objet ***Repere***. 

Pour materialiser ce ***Repere***, on a besoin de la notion de ***Point***.

Le ***Repere*** est un Point de coordonnee (0.;0.)

Le ***Point*** est un emplacement variable. On le construit ***Point***(x, y) avec x et y des doubles, afin de permettre des nombres plus grands.

Le ***Rectangle*** est une composition de 4 Points. Le ***Rectangle*** est responsable de sa propre cohérence, il est construit Rectangle(Point1, Point2, Point3, Point4), et vérifiera sa propriété de 3 angles droits (produit salaire, on a besoin de rien d'autre que les coordonées des points) et 4 Points distincts.

Le ***Rectangle*** calcule sa surface.

* Package ***view***

Le package view contient une classe ***Console*** chargée de l'affichage et du séquencage des saisies

Note : Cette classe ***Console*** pourra etre substituée par un ***Controleur*** d'entrée qui porterait la responsabilité du séquencage des actions, et une classe ***Console***


# On va garder celle la de conception :

***Rectangle*** : calcule sa surface, contient l et L, et un tableau statique d'instances de rectangle 

***IHM*** : contient main() et les saisies/resultats