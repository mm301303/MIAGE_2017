# Objectif du cours

Qualité logcielle 
* qualité externe - du point de vue utilisateur
* qualité interne - du point de vue de la maintenabilité et de l'évolutivité 

On applique donc la COO afin de favoriser la séparation des tâches en unités de code (voir responsabilité c'est l'art de structurer le programme), la limitation des dépendances (voir couplage), cohérence de l'ensemble.

Les modifications de code doivent être les plus limitées en terme de temps possible.

Langage : Java

POO à venir.

La notion de COO est liée à la gestion de projet, on va forcément bosser à plusieurs (3).

The team : 

* PRETTE
* MOINEAU
* Le VILIN GABAR

# Etude de cas 

On va modéliser un ascenceur en JAVA en analyse/conception.

# Méthodologie

La méthodologie est un ensemble de tâche d'ingénierie logicielle comprenant :

* Spécification des exigences
* Conception
* Codage 

et gestion de projet, même si un cours y sera dédié dans la formation.

La communication intraéquipe et avec le client est au cour de la coo.

# Définitions

ANALYSE : Le quoi "externe", du point de vue client, ce sont les fonctionnalités

CONCEPTION : Le quoi "interne", du point de vue développeur, le comment on fait 


Le test de qualification valide la cohérence entre analyse et conception
Les tests de qualification sont définis en analyse 

Le test d'intégration permet de s'assurer du bon fonctionnement du produit et valide la conception.

Ces définitions ont 20 ans et sont indépendante de la technologie utilisée.

Rappel du cycle en v

```

Dans cette partie on a pas besoin de connaitre Le codage

	\ 						/
Specs				Test de qualification
  	  \					  /
-----------------------------------------
Dans cette partie on a besoin de connaitre le code
	 	\				/
	conception 	Test d'intégration
			\		/
			  Codage


```

