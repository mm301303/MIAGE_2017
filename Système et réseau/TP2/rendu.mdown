# Présentation

```
./evallog0 
evalue |1&&11&01 en commencant par dormir 2 secondes
evalue 1 en commencant par dormir 0 secondes
evaluation de 1 terminee : 1
evalue &&11&01 en commencant par dormir 0 secondes
evalue &11 en commencant par dormir 1 secondes
evalue 1 en commencant par dormir 0 secondes
evaluation de 1 terminee : 1
evalue 1 en commencant par dormir 1 secondes
evaluation de 1 terminee : 1
evaluation de &11 terminee : 1
evalue &01 en commencant par dormir 0 secondes
evalue 0 en commencant par dormir 0 secondes
evaluation de 0 terminee : 0
evalue 1 en commencant par dormir 1 secondes
evaluation de 1 terminee : 1
evaluation de &01 terminee : 0
evaluation de &&11&01 terminee : 0
evaluation de |1&&11&01 terminee : 1

```

# 2. Évaluation récursive monoprocessus

Question 1. Analysez le code fourni pour bien comprendre et testez-le avec
la chaine |&101. Combien de fois appelle-t-on au processus eval ?

Réponse théorique : on a un appel par noeud de l'arbre, soit pour |&101 5 appels à eval.
Réponse pratique : la formule est (1&0) | 1,
	dans le code ça fait : 
	1. call a eval, operator[0] a la valeur &
		2.1 call a eval pour |
			2.1.1 call a eval pour 1
			2.1.2 call a eval pour 0
		2.2 call a eval pour 1
soit 5 appels.

On le vérifie par le nombre d'affichage de printf("evalue %s en commencant par dormir %d secondes\n" , formula , sleeping_time);

```
evalue |&101 en commencant par dormir 0 secondes
evalue &10 en commencant par dormir 1 secondes
evalue 1 en commencant par dormir 2 secondes
evaluation de 1 terminee : 1
evalue 0 en commencant par dormir 0 secondes
evaluation de 0 terminee : 0
evaluation de &10 terminee : 0
evalue 1 en commencant par dormir 1 secondes
evaluation de 1 terminee : 1
evaluation de |&101 terminee : 1

```

# 3 Évaluation parallèle 1

Question 2. Implémentez cet évaluateur parallèle avec le nom evallog1.c.

```

./evallog1 
evalue |1|&11|10 en commencant par dormir 0 secondes
evalue |&11|10 en commencant par dormir 1 secondes
evalue 1 en commencant par dormir 1 secondes
evaluation de 1 terminee : 1
I am the father
the son is dead
evaluation de |1|&11|10 terminee : 1
evalue |10 en commencant par dormir 2 secondes
evalue &11 en commencant par dormir 2 secondes
evalue 0 en commencant par dormir 0 secondes
evaluation de 0 terminee : 0
evalue 1 en commencant par dormir 0 secondes
evaluation de 1 terminee : 1
I am the father
the son is dead
evaluation de |10 terminee : 1
evalue 1 en commencant par dormir 0 secondes
evaluation de 1 terminee : 1
evalue 1 en commencant par dormir 0 secondes
evaluation de 1 terminee : 1
I am the father
the son is dead
evaluation de &11 terminee : 1
I am the father
the son is dead
evaluation de |&11|10 terminee : 1


```